// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/hiteshpattanayak-tw/ports_processor/internal/app/model"
	mock "github.com/stretchr/testify/mock"
)

// PortRepository is an autogenerated mock type for the PortRepository type
type PortRepository struct {
	mock.Mock
}

// UpsertPort provides a mock function with given fields: ctx, port
func (_m *PortRepository) UpsertPort(ctx context.Context, port *model.Port) error {
	ret := _m.Called(ctx, port)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *model.Port) error); ok {
		r0 = rf(ctx, port)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewPortRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewPortRepository creates a new instance of PortRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPortRepository(t mockConstructorTestingTNewPortRepository) *PortRepository {
	mock := &PortRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
