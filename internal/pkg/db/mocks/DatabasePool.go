// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// DatabasePool is an autogenerated mock type for the DatabasePool type
type DatabasePool struct {
	mock.Mock
}

// SetConnMaxIdleTime provides a mock function with given fields: d
func (_m *DatabasePool) SetConnMaxIdleTime(d time.Duration) {
	_m.Called(d)
}

// SetConnMaxLifetime provides a mock function with given fields: d
func (_m *DatabasePool) SetConnMaxLifetime(d time.Duration) {
	_m.Called(d)
}

// SetMaxIdleConns provides a mock function with given fields: n
func (_m *DatabasePool) SetMaxIdleConns(n int) {
	_m.Called(n)
}

// SetMaxOpenConns provides a mock function with given fields: n
func (_m *DatabasePool) SetMaxOpenConns(n int) {
	_m.Called(n)
}

type mockConstructorTestingTNewDatabasePool interface {
	mock.TestingT
	Cleanup(func())
}

// NewDatabasePool creates a new instance of DatabasePool. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDatabasePool(t mockConstructorTestingTNewDatabasePool) *DatabasePool {
	mock := &DatabasePool{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
